import Silla.*
import Cliente.*
import ingredientes.*
import coctelera.*

import wollok.game.*


const naranja = new Ingredientes()
const limon = new Ingredientes()
const cocacola = new Ingredientes()


// Comienzan los tests sobre las Sillas
describe "Pruebas para la clase Silla y sus herederas" {
	
	test "evaluarEstado() sin cliente y con 100% de probabilidades, debe generar cliente" {
		
		const silla = new SillaParaTest(position = game.origin())
		
		assert.notThat(silla.estaOcupada())
		
		silla.evaluarEstado()
		
		assert.equals(silla.cliente().toString(), "un/a  Cliente")
	}
	
	test "Si la silla ya tiene un cliente, evaluarEstado() conserva el mismo cliente" {
		
		const silla = new SillaParaTest(position = game.origin())
		
		silla.evaluarEstado()
		
		const cliente = silla.cliente()
		
		silla.evaluarEstado()
		
		assert.that(silla.cliente() === cliente)
	}
	
	test "retirarCliente()" {
		
		const silla = new SillaParaTest(position = game.origin())
		
		silla.evaluarEstado()
		
		assert.equals(silla.cliente().toString(), "un/a  Cliente")
		
		silla.retirarCliente()
		
		assert.notThat(silla.estaOcupada())
	}
	
}


// Comienzan los tests sobre los Ingredientes y Coctelera
 describe "Ingredientes" {
 	test "Iniciliza vacio la cantidad de onzas"{
 		assert.equals(0, naranja.cantidadOnzas())
 	}
 	test "Aumtar onza"{
 		naranja.aumentarOnza()
	 	assert.equals(1, naranja.cantidadOnzas())	
 	}
 }
 
 describe "Coctelera" {
 	test "Agregar Ingredientes" {
 		coctelera.agregarIngredientes(naranja)
 		coctelera.agregarIngredientes(limon)
 		coctelera.agregarIngredientes(cocacola)
 		assert.equals([naranja, limon, cocacola], coctelera.ingredientes())
 	}
 	test "Aumetan Onzas" {
 		coctelera.agregarIngredientes(naranja)
 		assert.equals(1, coctelera.ingredientes().first().cantidadOnzas())
 		
 		coctelera.agregarIngredientes(limon)
 		assert.equals(1, coctelera.ingredientes().get(1).cantidadOnzas())
 		
 		coctelera.agregarIngredientes(naranja)
 		assert.equals(2, coctelera.ingredientes().first().cantidadOnzas())
 		
 		coctelera.agregarIngredientes(limon)
 		assert.equals(2, coctelera.ingredientes().get(1).cantidadOnzas())
 	}
 	
 	test "Limpiar coctelera" {
 		coctelera.agregarIngredientes(naranja)
 		coctelera.agregarIngredientes(limon)
 		coctelera.agregarIngredientes(cocacola)
 		coctelera.limpiar()
 		assert.that(coctelera.ingredientes().isEmpty())
 	}
 }

